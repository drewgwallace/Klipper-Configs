# PRINT_START EXTRUDER=[first_layer_temperature[initial_tool]] BED=[first_layer_bed_temperature] DWELLCOLD=5 DWELLHOT=0  PRIME_LINE=false PREHEAT=chamber CHAMBER=[chamber_temperature]
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set preheat_type = params.PREHEAT|default("chamber")|string %}			# Options: chamber, dwell, other
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("36")|int %}
  {% set probe = params.PROBE|default(true)|string %}
  {% set prime_line = params.PRIME_LINE|default(true)|string %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set actual_bed_temp = printer.heater_bed.temperature %}
  {% set dwell_cold = params.DWELLCOLD|default("15")|int %} ; Minutes
  {% set dwell_heated = params.DWELLHOT|default("0")|int %} ; Minutes
  {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set Rx = 84 %}

  LED_ON
  SET_FILAMENT_SENSOR SENSOR=motion_sensor ENABLE=0 		# disable motion_sensor

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  {% if probe|lower == 'true' %}
  ##  Bed Mesh
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          				# Displays info
  M104 S150                                    				# Begin to heat the nozzle to 150c

  { action_respond_info("preheat_type %s" % preheat_type|string) }

  {% if target_chamber == 0 %}
    { action_respond_info("Target Chamber %d, turning on exhaust fan" % target_chamber|int) }
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
  {% else %}
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0
  {% endif %}
  
  {% if preheat_type|lower == "chamber" %}
    { action_respond_info("Target Chamber %d" % target_chamber|int) }
    SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
    STATUS_HEATING                                      	# Sets SB-leds to heating-mode
    M106 S255                                           	# Turns on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
    M190 S{target_bed}                                  	# Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Bed heated, will soak to %d chamber"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  {% elif (preheat_type|lower == "dwell" or preheat_type|lower == "bed") %}				# 
    {% if actual_bed_temp >= target_bed - 2 %}				# Determine the bed is preheated
      SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
      STATUS_HEATING                                      	# Sets SB-leds to heating-mode
      M106 S255                                           	# Turns on the PT-fan
      G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
      M190 S{target_bed}                                  	# Sets the target temp for the bed
      SET_DISPLAY_TEXT MSG="{target_bed}c bed | {dwell_heated}m soak"  # Displays info
	  { action_respond_info("Bed preheated, will soak for %d minutes" % dwell_heated|int) }
	  G4 P{dwell_heated * 60000}  # Heat soak for X minutes (in milliseconds)
	{% else %}
      SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
       STATUS_HEATING                                      	# Sets SB-leds to heating-mode
       M106 S255                                           	# Turns on the PT-fan
      G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
      M190 S{target_bed}                                  	# Sets the target temp for the bed
	  { action_respond_info("Bed not heated, will soak for %d minutes" % dwell_cold|int) }
      SET_DISPLAY_TEXT MSG="{target_bed}c bed|{dwell_cold}m soak"                # Displays info#
	  G4 P{dwell_cold * 60000}								# Heat soak for X minutes (in milliseconds)
    {% endif %}
  
  {% else %}  
    SET_DISPLAY_TEXT MSG="Bed to {target_bed}c"          	# Displays info
    STATUS_HEATING                                      	# Sets SB-leds to heating-mode
    M106 S255                                           	# Turns on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
    M190 S{target_bed}                                  	# Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="{target_bed}c bed"  # Displays info
	{ action_respond_info("Skipping bed soak") }
  {% endif %}

  M109 S150                       							# Ensure TAP preheated for QGL
  SET_DISPLAY_TEXT MSG="QGL"      							# Displays info
  STATUS_LEVELING                 							# Sets SB-leds to leveling-mode
  quad_gantry_level               							# Levels the buildplate via QGL
  G28 Z                           							# Homes Z again after QGL

  {% if probe|lower == 'true' %}
  ##  Bed Mesh
  SET_DISPLAY_TEXT MSG="Bed mesh"    						# Displays info
  STATUS_MESHING                     						# Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 						# Starts bed mesh
  {% endif %}

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"         # Displays info
  STATUS_HEATING                                            # Sets SB-leds to heating-mode
  G1 X{Rx} Y{Ry} Z15 F9000                          		# Goes to rear scrub point
  #G1 X{x_wait} Y{y_wait} Z15 F9000                          # Goes to center of the bed
  M107                                                      # Turns off partcooling fan
  M109 S{target_extruder}                                   # Heats the nozzle to printing temp

  SET_DISPLAY_TEXT MSG="Mr. Clean"
  clean_nozzle

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printer go brrtt"          			# Displays info
  STATUS_PRINTING                                  			# Sets SB-leds to printing-mode
 
  { action_respond_info("prime_line: %s" % prime_line|lower) }
  {% if prime_line|lower == 'true' %}
  NOZZLE_PRIME_LINE
  {% endif %}
  
  UPDATE_DELAYED_GCODE ID=ENABLE_MOTION_SENSOR DURATION=60 	# enable sensor in 60 seconds
  
  G90