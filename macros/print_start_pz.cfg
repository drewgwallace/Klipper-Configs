# PRINT_START PROBE=true EXTRUDER=[first_layer_temperature[initial_tool]] BED=[first_layer_bed_temperature] DWELLCOLD=5 DWELLHOT=0  EXTRUDER_PURGE=line PREHEAT=chamber CHAMBER=[chamber_temperature] BED_FANS=0.50 EXTERNAL_PC=0.50
[gcode_macro PRINT_START]
gcode:
																													
  {% set preheat_type = params.PREHEAT|default("chamber")|string %}			# Options: chamber, dwell, other
  {% set target_bed = params.BED|int %}
#  {% set bed_fans = params.BED_FANS|default("0.50")|float %}
  {% set externalpc = params.EXTERNAL_PC|default("0.00")|float %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set probe = params.PROBE|default(true)|string %}
  {% set extruder_purge = params.EXTRUDER_PURGE|default("line")|string %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  {% set actual_bed_temp = printer.heater_bed.temperature %}
  {% set dwell_cold = params.DWELLCOLD|default("15")|int %} # Minutes
  {% set dwell_heated = params.DWELLHOT|default("0")|int %} # Minutes
  {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set Rx = printer.configfile.config["stepper_y"]["position_max"]|float / 2 %}

  #SET_FILAMENT_SENSOR SENSOR=motion_sensor ENABLE=0 		# disable motion_sensor

  #{ action_respond_info("bed_fans: {0}".format(bed_fans | float)) }
  #SET_FAN_SPEED FAN=bed_fans SPEED={bed_fans}


  M140 S{target_bed}                                  	# Sets the target temp for the bed

  M107
  G28                   # Full home (XYZ)
  G90                   # Absolut position																						 

  {% if probe|lower == 'true' %}
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
  {% endif %}

																		   
#  SET_DISPLAY_TEXT MSG="Hotend: 150c"          				# Displays info
  M104 S150                                    				# Begin to heat the nozzle to 150c

  { action_respond_info("preheat_type: {0}".format(preheat_type)) }

  {% if target_chamber == 0 %}
    { action_respond_info("target_chamber: {0}, turning on exhaust fan".format(target_chamber | int)) }
    EXHAUST_FAN SPEED=1
  {% else %}
    EXHAUST_FAN SPEED=0
  {% endif %}

  {% if externalpc <= 0.25 %} 
    EXTERNAL_PC SPEED=0.25
  {% else %}
    EXTERNAL_PC SPEED={externalpc}
  {% endif %}

  
  {% if preheat_type|lower == "chamber" %}
    { action_respond_info("target_chamber: {0}".format(target_chamber | int)) }
    SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
    M190 S{target_bed}                                  	# Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Bed heated, will soak to {target_chamber} chamber"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  {% elif (preheat_type|lower == "dwell" or preheat_type|lower == "bed") %}				# 
    {% if actual_bed_temp >= target_bed - 2 %}				# Determine the bed is preheated
      SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
      G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
      M190 S{target_bed}                                  	# Sets the target temp for the bed
      SET_DISPLAY_TEXT MSG="{target_bed}c bed | {dwell_heated}m soak"  # Displays info
      { action_respond_info("Bed preheated, will soak for {0} minutes".format(dwell_heated | int)) }
	  G4 P{dwell_heated * 60000}  # Heat soak for X minutes (in milliseconds)
	{% else %}
      SET_DISPLAY_TEXT MSG="Bed ðŸ”¥ to {target_bed}c"          	# Displays info
      G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
      M190 S{target_bed}                                  	# Sets the target temp for the bed
      { action_respond_info("Bed not heated, will soak for {0} minutes".format(dwell_cold | int)) }
      SET_DISPLAY_TEXT MSG="{target_bed}c bed|{dwell_cold}m soak"                # Displays info#
	  G4 P{dwell_cold * 60000}								# Heat soak for X minutes (in milliseconds)
    {% endif %}
  
  {% else %}  
    SET_DISPLAY_TEXT MSG="Bed to {target_bed}c"          	# Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                    	# Goes to center of the bed
    M190 S{target_bed}                                  	# Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="{target_bed}c bed"  # Displays info
	{ action_respond_info("Skipping bed soak") }
  {% endif %}

  SET_FAN_SPEED FAN=external_PC SPEED={externalpc}

  M109 S150                       							# Ensure extruder preheated for Z_TILT_ADJUST
  SET_DISPLAY_TEXT MSG="Z_TILT_ADJUST"      				# Displays info
  G1 X5 Y5 F6000											# Move to first Z_TILE_ADJUST probe point
  G4 P250													# Pause for PZ before beginning probe
  Z_TILT_ADJUST               								# Levels the buildplate via Z_TILT_ADJUST
  G28 Z                           							# Homes Z again after Z_TILT_ADJUST

  {% if probe|lower == 'true' %}
    ##  Bed Mesh
    SET_DISPLAY_TEXT MSG="Bed mesh"    						# Displays info
    bed_mesh_calibrate                 						# Starts bed mesh
  {% endif %}

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"         # Displays info
  G1 X{Rx} Y{Ry} Z15 F9000                          		# Goes to rear scrub point
  M109 S{target_extruder}                                   # Heats the nozzle to printing temp

  { action_respond_info("extruder_purge: {0}".format(extruder_purge)) }
  {% if extruder_purge|lower == 'bucket' %}
    SET_DISPLAY_TEXT MSG="Mr. Clean"
    { action_respond_info("Will use Purge Bucket") }
    clean_nozzle
  {% elif extruder_purge|lower == 'line' %}
    { action_respond_info("Will use KAMP line purge") }
	LINE_PURGE
  {% else %}
    { action_respond_info("Skipping purge") }
  {% endif %}

  SET_DISPLAY_TEXT MSG="Printer go brrtt"          			# Displays info
  #UPDATE_DELAYED_GCODE ID=ENABLE_MOTION_SENSOR DURATION=60 	# enable sensor in 60 seconds

  G21 														# set units to millimeters
  G90 														# use absolute coordinates
  M83 														# use relative distances for extrusion