[gcode_macro NOZZLE_PRIME_LINE]
description:
  Prime the nozzle by laying a strip of plastic along the left side of the bed
gcode:
  SAVE_GCODE_STATE NAME=nozzle_prime_state

  {% set pi = 3.1415926536 %}
  {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter %}
  {% set filament_diam = printer.configfile.settings.extruder.filament_diameter %}
  {% set retract_len = printer.configfile.settings.firmware_retraction.retract_length %}
  {% set layer_height = 0.28 %}
  {% set line_width = nozzle_diam * 1.75 %}
  {% set x_start = printer.toolhead.axis_minimum.x + 2 %}
  {% set x_end = x_start + line_width %}
  {% set y_start = printer.toolhead.axis_minimum.y + 5 %}
  {% set y_end = params.y_end|default(y_start + 180)|int %}
  {% if y_end > printer.toolhead.axis_maximum.y - 20 %}
    {% set y_end = printer.toolhead.axis_maximum.y - 20 %}
  {% endif %}
  {% set y_diff = y_end - y_start %}
  {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height) %}
  {% set extrude_vol = y_diff * extrude_cross_section_area %}
  {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2) %}

  G90 																	# Absolute positionning
  M82 																	# Absolute extrusion
  G92 E0 																# Reset extruder

  { action_respond_info("retract_len: %f " % retract_len|float) }
  { action_respond_info("filament_diam: %f " % filament_diam|float) }
  { action_respond_info("nozzle_diam: %f " % nozzle_diam|float) }
  #{ action_respond_info("extrude_cross_section_area: %f " % extrude_cross_section_area|float) }
  { action_respond_info("extrude_vol: %f " % extrude_vol|float) }
  { action_respond_info("extrude_len: %f " % extrude_len|float) }


  G1 Z5.0 F3000 														# Move Z axis up

  G1 X{x_start} Y{y_start} F5000.0 										# Move tool to XY pos
  G1 Z{layer_height} F5000.0 											# Move tool down
  G1 X{x_start} Y{y_end} Z{layer_height} F1500.0 E{extrude_len} 		# Start priming wipe
  G1 X{x_end} Y{y_end} Z{layer_height} F5000.0
  G1 X{x_end} Y{y_start} Z{layer_height} F1500.0 E{extrude_len * 2} 	# Finish priming wipe

  G1 X15 Z5.0 E{(extrude_len * 2) - retract_len} F3000 					# Move X to the right, Z axis up & retract
  G92 E0 																# Reset extruder
  G91																	# Relative Positioning
  RESTORE_GCODE_STATE NAME=nozzle_prime_state

https://github.com/jschuh/klipper-macros/blob/ebae0a3b6ec4bf7096e7b068967b283992078f5f/draw.cfg#L54  
[gcode_macro draw_purge_line]
description: Purges the specified length of filament as a line (or rows of
  lines) in front of the supplied print area. If no print area is specified the
  purge lines are drawn at the front edge of the maximum printable area. If no
  printable area is set it defaults to the XY axis limits.
  Usage: DRAW_PURGE_LINE [PRINT_MIN=<X,Y>] [PRINT_MAX=<X,Y>] [HEIGHT=<mm>]
                         [WIDTH=<mm>] [LENGTH=<mm>]
gcode:
  # TODO: Make this work for delta printers.
  {% set km = printer["gcode_macro _km_globals"] %}
  {% set origin = printer.gcode_move.homing_origin %}
  {% set dummy = km.__setitem__('print_min', (km.print_min[0] - origin.x,
                                              km.print_min[1] - origin.y)) %}
  {% set dummy = km.__setitem__('print_max', (km.print_max[0] - origin.x,
                                              km.print_max[1] - origin.y)) %}

  {% if "PRINT_MIN" in params %}
    {% set PRINT_MIN = (
        (params.PRINT_MIN.split(",")[0]|float, km.print_min[0])|max,
        (params.PRINT_MIN.split(",")[1]|float, km.print_min[1])|max
      ) %}
  {% else %}
    {% set PRINT_MIN = km.print_min %}
  {% endif %}
  {% if "PRINT_MAX" in params %}
    {% set PRINT_MAX = (
        (params.PRINT_MAX.split(",")[0]|float, km.print_max[0])|min,
        (params.PRINT_MAX.split(",")[1]|float, km.print_max[1])|min
      ) %}
  {% else %}
    {% set PRINT_MAX = km.print_max %}
  {% endif %}
  {% set extruder = printer.toolhead.extruder|string %}
  {% set HEIGHT = params.HEIGHT|default(
    printer.configfile.settings[extruder].nozzle_diameter * 0.625)|float %}
  {% set WIDTH = params.WIDTH|default(
    printer.configfile.settings[extruder].nozzle_diameter * 1.25)|float %}
  {% set LENGTH = params.LENGTH|default(km.start_purge_length)|float %}

  {% set dparams = printer["gcode_macro set_draw_params"] %}
  {% set filament_area = 3.14159 *
       (printer.configfile.settings[extruder].filament_diameter ** 2) / 4 %}
  {% set purge_length = (LENGTH * filament_area) / (WIDTH * HEIGHT) %}
  {% set printable_length = PRINT_MAX[0] - PRINT_MIN[0] %}
  {% set purge_rows = (purge_length / printable_length)|round(0,'ceil')|int %}
  {% set printable_inset = (printable_length - purge_length / purge_rows) / 2 %}
  {% set PRINT_MIN = (PRINT_MIN[0] + printable_inset, PRINT_MIN[1]) %}
  {% set PRINT_MAX = (PRINT_MAX[0] - printable_inset, PRINT_MAX[1]) %}
  # This will purge into the print area when the bed is filled to the front.
  {% set y_start = (km.print_min[1], PRINT_MIN[1] - km.start_purge_clearance -
                                       (purge_rows + 0.5) * WIDTH )|max %}
  G90
  # Jog to the front left corner to get strings out of the print area.
  G1 X{"%.3f" % (PRINT_MIN[0] - 30, km.print_min[0])|max} Y{
    "%.3f" % (y_start - 10, km.print_min[1])|max} F{km.travel_speed_xy}
  # Move to the starting corner.
  G1 X{"%.3f" % (PRINT_MIN[0] - km.start_purge_prime_length / WIDTH,
                 km.print_min[0])|max} Y{"%.3f" % y_start} Z{
    "%.4f" % HEIGHT} F{km.travel_speed_xy}
  # Prime the extruder before beginning the purge lines.
  G92 E0.0
  # Move slowly during priming to prevent excessive blobbing
  G1 X{"%.3f" % PRINT_MIN[0]} E{"%.3f" % km.start_purge_prime_length
   } F{km.load_priming_speed}
  G92 E0.0
  # Purge.
  {% for n in range(purge_rows - 1) %}
    {% set x_pos = PRINT_MIN[0] if n % 2 else PRINT_MAX[0] %}
    DRAW_LINE_TO HEIGHT="{HEIGHT}" WIDTH="{WIDTH}" X="{x_pos}" Y="{
      WIDTH * n + y_start}"
    DRAW_LINE_